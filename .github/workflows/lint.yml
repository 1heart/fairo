name: Lint

on:
    push:
      branches:
      - yuxuans/bot
    pull_request:
      branches:
      - yuxuans/bot

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
          - name: Setup Python
            uses: actions/setup-python@v1
            with:
              python-version: 3.7.x
              architecture: x64
          - name: Fetch Droidlet
            uses: actions/checkout@v2
            with:
              ref: ${{ github.event.pull_request.head.sha }}
              fetch-depth: 0
          - name: Fix git
            run: |
              set -eux
              git fetch origin main
              if [[ "${{ github.event_name }}" == "pull_request" ]]; then
                git branch -f main origin/main
              fi
          - name: Run flake8
            run: |
              set -eux
              pip install -q flake8
              flake8 --version
              bash tools/codetools/check_flake8_failures.sh --ci | tee ${GITHUB_WORKSPACE}/output-annotations.txt
          - name: Run black
            run: |
              set -eux
              pip3 install $(cat requirements.txt | grep -e black)
              bash tools/codetools/check_and_fix_black_failures.sh --ci
          - name: Add annotations
            uses: pytorch/add-annotations-github-action@master
            with:
              check_name: 'lint'
              linter_output_path: 'output-annotations.txt'
              commit_sha: ${{ github.event.pull_request.head.sha }}
              regex: '^(?<filename>.*?):(?<lineNumber>\d+):(?<columnNumber>\d+): (?<errorCode>\w+\d+) (?<errorDesc>.*)'
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    update_internal:
        needs: lint
        runs-on: ubuntu-latest
        steps:
          - name: Fetch Internal repo
            uses: actions/checkout@v2
            with:
              repository: fairinternal/minecraft
              token: ${{ secrets.SNYXAN_REPO }}
          - name: Fix git
            run: |
              set -eux
              git fetch origin master
              if [[ "${{ github.event_name }}" == "pull_request" ]]; then
                git checkout -b yuxuans/sync_test origin/master
              fi
          - name: Update droidlet submodule to latest
            run: |
              git submodule update --remote --merge
              cd droidlet
              pwd
              commit_msg="[Droidlet Update] $(git show -s --format=%s)"
              cd ..
              pwd
              git commit -m $commit_msg && git push
          